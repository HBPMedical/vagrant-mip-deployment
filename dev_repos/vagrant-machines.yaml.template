global_parameters:
  branch: &branch master
  federation: &federation mipfed1
  public_mip_protocol: &public_mip_protocol https
  public_mip_host: &public_mip_host <VM_PREFIX>-local1.<DOMAIN_NAME>
  keycloak_protocol: &keycloak_protocol https
  keycloak_url: &keycloak_url <KEYCLOAK_URL>



  os_cloud: <OPENSTACK_PROJECT_NAME>                                 # OpenStack: Cloud configuration (in clouds.yaml).
  generated_ssh_config_file: vagrant-ssh.config                      # Generated SSH configuration file. You can remove this file to force re-generation/synchronization in case of new IPs.
  scripts_path: dev_repos/scripts                                    # Relative path to provisioning scripts.
  host_test_connection_timeout: 0.1                                  # Timeout when testing for a host to respond. Used when parsing the different VMs configuration, in pre-provisioning.
  os_new_floating_ip_allocation: false                               # OpenStack: Allow allocation of new floating IP everytime. It will allocation new floatings to your project, even if floatings are available.

  ssh_username: ubuntu                                               # SSH username to be used to connect to the machines. Can be overridden in machine description.
  os_ssh_keypair_name: <OPENSTACK_SSH_KEYPAIR>                       # OpenStack: SSH keypair name to be used when connecting to the machines. Can be overridden in machine description.
  ssh_private_key_file: ~/.ssh/id_rsa                                # SSH private key file matching (in case of OpenStack provider) the SSH keypair name. Can be overridden in machine description.
  sshfs_allow_other: true                                            # SSHFS parameter. If false, only the targetted user can see the mounted path, not even root!! If false, this can lead to issues with provisioning. Can be overridden in machine description.
  os_network: <OPENSTACK_NETWORK>                                    # OpenStack: Private network name in which to attach machines. Can be overridden in machine description.
  os_floating_ip: false                                              # OpenStack: Assign floating IP to machines. This is needed when this host can't join the project VMs with private IP. This may be annoying regarding the vagrant-ssh.config file which will never be up-to-date and will regularly have to be deleted. Can be overridden in machine description.

  os_public_net_name: &os_public_net_name <OPENSTACK_EXT_NETWORK>    # OpenStack: Public network name. This is used as floating IPs allocation pool.
  os_security_groups: &os_security_groups <OPENSTACK_SECU_GROUP>     # OpenStack: Security groups to assign to machines (string or list). This is meant to be used in machine_type description.
  os_flavor_name: &os_flavor_name <OPENSTACK_FLAVOR_NAME>            # OpenStack: Flavor name to assign to machines. This is meant to be used in machine_type description.
  os_image_name: &os_image_name <OPENSTACK_IMAGE_NAME>               # OpenStack: Image name to assign to machines. This is meant to be used in machine_type description.
  os_image_size: &os_image_size <OPENSTACK_VM_SIZE_GB>               # OpenStack: Image hard disk size to assign to machines. This is meant to be used in machine_type description.
  os_delete_volume_on_destroy: &os_delete_volume_on_destroy true     # OpenStack: A volume is automatically created to store the root filesystem of the VM. If true, this volume will be automatically destroyed upon destroy of VM. This is meant to be used in machine_type description.

provisioning:
  worker:
    - {name: mip-fed-yell_my_ip, type: shell, shell: {path: inside_vagrant_only.mip-fed-yell_my_ip, args: <%= defined?(hostname) %>}}
    - {name: mip-fed-worker, type: shell, shell: {path: inside_vagrant_only.mip-fed-worker, args: [--branch, *branch]}}
    - {name: install-mc, type: shell, shell: {path: inside_vagrant_only.install-mc}}
    - {name: upgrade-os, type: shell, shell: {path: inside_vagrant_only.upgrade-os}}
    - {name: cleanup-apt, type: shell, shell: {path: inside_vagrant_only.cleanup-apt}}
    - {name: mip-import-data, type: shell, shell: {path: inside_vagrant_only.mip-import-data, args: [--federation, *federation]}}
  master:
    - {name: mip-fed-yell_my_ip, type: shell, shell: {path: inside_vagrant_only.mip-fed-yell_my_ip}}
    - {name: mip-fed-master, type: shell, shell: {path: inside_vagrant_only.mip-fed-master, args: [--branch, *branch]}}
    - {name: install-mc, type: shell, shell: {path: inside_vagrant_only.install-mc}}
    - {name: upgrade-os, type: shell, shell: {path: inside_vagrant_only.upgrade-os}}
    - {name: cleanup-apt, type: shell, shell: {path: inside_vagrant_only.cleanup-apt}}
    - {name: mip-import-cde, type: shell, shell: {path: inside_vagrant_only.mip-import-cde, args: [--federation, *federation]}}
  ui:
    - {name: mip-fed-yell_my_ip, type: shell, shell: {path: inside_vagrant_only.mip-fed-yell_my_ip}}
    - {name: mip-fed-ui, type: shell, shell: {path: inside_vagrant_only.mip-fed-ui, args: [--public-mip-protocol, *public_mip_protocol, --public-mip-host, *public_mip_host, --keycloak-protocol, *keycloak_protocol, --keycloak-url, *keycloak_url, --branch, *branch]}}
    - {name: install-mc, type: shell, shell: {path: inside_vagrant_only.install-mc}}
    - {name: upgrade-os, type: shell, shell: {path: inside_vagrant_only.upgrade-os}}
    - {name: cleanup-apt, type: shell, shell: {path: inside_vagrant_only.cleanup-apt}}
  pusher:
    - {name: mip-fed-yell_my_ip, type: shell, shell: {path: inside_vagrant_only.mip-fed-yell_my_ip}}
    - {name: mip-fed-pusher, type: shell, shell: {path: inside_vagrant_only.mip-fed-pusher, args: [--federation, *federation, --branch, *branch]}}
    - {name: install-mc, type: shell, shell: {path: inside_vagrant_only.install-mc}}
    - {name: upgrade-os, type: shell, shell: {path: inside_vagrant_only.upgrade-os}}
    - {name: cleanup-apt, type: shell, shell: {path: inside_vagrant_only.cleanup-apt}}
  local:
    - {name: mip-local, type: shell, shell: {path: inside_vagrant_only.mip-local, args: [--public-mip-protocol, *public_mip_protocol, --public-mip-host, *public_mip_host, --keycloak-protocol, *keycloak_protocol, --keycloak-url, *keycloak_url, --branch, *branch]}}
    - {name: install-mc, type: shell, shell: {path: inside_vagrant_only.install-mc}}
    - {name: upgrade-os, type: shell, shell: {path: inside_vagrant_only.upgrade-os}}
    - {name: cleanup-apt, type: shell, shell: {path: inside_vagrant_only.cleanup-apt}}

machine_type:
  worker:
    os_flavor_name: *os_flavor_name
    os_security_groups: *os_security_groups
    os_image_name: *os_image_name
    os_image_size: *os_image_size
    os_delete_volume_on_destroy: *os_delete_volume_on_destroy
    provisioning: worker
  master:
    os_flavor_name: *os_flavor_name
    os_security_groups: *os_security_groups
    os_image_name: *os_image_name
    os_image_size: *os_image_size
    os_delete_volume_on_destroy: *os_delete_volume_on_destroy
    provisioning: master
  ui:
    os_flavor_name: *os_flavor_name
    os_security_groups: *os_security_groups
    os_image_name: *os_image_name
    os_image_size: *os_image_size
    os_delete_volume_on_destroy: *os_delete_volume_on_destroy
    provisioning: ui
  pusher:
    os_flavor_name: m1.small2
    os_security_groups: *os_security_groups
    os_image_name: *os_image_name
    os_image_size: *os_image_size
    os_delete_volume_on_destroy: *os_delete_volume_on_destroy
    provisioning: pusher
  local:
    os_flavor_name: *os_flavor_name
    os_security_groups: *os_security_groups
    os_image_name: *os_image_name
    os_image_size: *os_image_size
    os_delete_volume_on_destroy: *os_delete_volume_on_destroy
    provisioning: local

machine:
  <VM_NAME>:
    ip: <VM_IP_ADDRESS>                                                 # If not defined, the IP will be dynamically assigned (if subnet is configured with DHCP). This may be annoying regarding the vagrant-ssh.config file which will never be up-to-date and will regularly have to be deleted.
    #os_floating_ip: true
    #os_ssh_keypair_name: mipadmin
    #ssh_private_key_file: ~/.ssh/id_rsa.mipadmin
    hostname: <VM_HOSTNAME>
    machine_type: local
  <VM_NAME>:
    ip: <VM_IP_ADDRESS>
    hostname: <VM_HOSTNAME>
    machine_type: worker
  <VM_NAME>:
    ip: <VM_IP_ADDRESS>
    hostname: <VM_HOSTNAME>
    machine_type: worker
  <VM_NAME>:
    ip: <VM_IP_ADDRESS>
    hostname: <VM_HOSTNAME>
    machine_type: master
  <VM_NAME>:
    ip: <VM_IP_ADDRESS>
    hostname: <VM_HOSTNAME>
    machine_type: ui
  <VM_NAME>:
    ip: <VM_IP_ADDRESS>
    hostname: <VM_HOSTNAME>
    machine_type: pusher
